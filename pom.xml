<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>yizhao</groupId>
    <!-- Build war step 1: The name of the WAR file is build upon the arifactId and the version parameters you set in your maven pom file.-->
    <artifactId>Mini-User-Data-Cache-Updater</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging><!-- Build war step 2: We need to set the packaging to war. Web applications in Tomcat are packed into WAR files (Web archives) encapsulating all the data of the app.-->
    <name>Mini User Data Cache Updater</name>

    <dependencies>
<!--        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope> &lt;!&ndash; Build war step 3: We set the scope to “provided” because Tomcat has all the libraries required already build in.&ndash;&gt;
        </dependency>-->

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.14</version>
        </dependency>

        <!--<dependency>-->
            <!--<groupId>mysql</groupId>-->
            <!--<artifactId>mysql-connector-java</artifactId>-->
            <!--<version>5.0.8</version>-->
        <!--</dependency>-->

        <!--for "BasicThreadFactory" in UDCUFileProcessor.java-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.3.2</version>
        </dependency>

        <!--for "org.apache.commons.dbcp.BasicDataSource" in miniudcu.xml-->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.2.1</version>
        </dependency>

        <!--for spring-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring</artifactId>
            <version>2.5.6</version>
        </dependency>


        <!--for "HttpPost" in SimplePosterWorker-->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.2.5</version>
        </dependency>


        <!--for "FileBody" and "MultipartEntity" in SimplePosterWorker-->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>4.2.5</version>
        </dependency>

        <!--for "IOUtils" in SimplePosterWorker-->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.1</version>
        </dependency>

    </dependencies>

    <build>
        <sourceDirectory>src</sourceDirectory>
        <plugins>
            <!--  Build war step 4: We need the Maven WAR plugin to be able to create the WAR file-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <webXml>WEB-INF/web.xml</webXml>
                    <!--<warSourceDirectory>src/main/webapp</warSourceDirectory>  	&lt;!&ndash;Single directory for extra files to include in the WAR. This is where you place your JSP files.&ndash;&gt;-->
                    <webResources>
                        <resource>
                            <directory>WEB-INF</directory>
                            <targetPath>WEB-INF</targetPath>
                            <filtering>false</filtering>
                            <includes>
                                <include>*.xml</include>
                            </includes>
                        </resource>
                    </webResources>
                    <warSourceExcludes>
                        WEB-INF/lib/servlet-api-*.jar,
                        bin/**,
                        dist/**,
                        **/pom.xml,
                        **/*.java
                    </warSourceExcludes>
                    <packagingExcludes>
                        WEB-INF/lib/junit-*.jar,
                        WEB-INF/lib/mysql-connector-java-*.jar,
                        WEB-INF/lib/servlet-api-*.jar
                    </packagingExcludes>
                </configuration>
            </plugin>
            <!--  Build war step 5: In the compiler section of the WAR plugin set 1.8. This means the classes will be compiled with Java 8-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
        <outputDirectory>WEB-INF/classes</outputDirectory>
    </build>
</project>